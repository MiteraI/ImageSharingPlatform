@page
@model ImageSharingPlatform.Pages.ImageRequestMng.IndexModel
@{
    string ImageSrc(byte[] imageBytes) => imageBytes == null ? "" : $"data:image/jpeg;base64,{Convert.ToBase64String(imageBytes)}";
}

<div class="container mt-5">
    <main role="main">
        <h2 class="mb-4">My Image Requests</h2>

        <div class="text-end mb-3">
            <a asp-page="./Create" class="btn btn-success">+ Create New Request</a>
            @{
                var userJson = HttpContext.Session.GetString("LoggedInUser");
                var useraccount = JsonConvert.DeserializeObject<User>(userJson);
                var isArtist = useraccount.Roles.Any(r => r.UserRole == UserRole.ROLE_ARTIST);
                if (isArtist)
                {
                    <a asp-page="/ArtistPages/ReceivedImageRequest/ReceivedImageRequest" class="btn btn-info ms-2">Received Requests</a>
                }
            }
        </div>

        <div class="card shadow mb-5">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead class="table-light">
                            <tr>
                                <th>Title</th>
                                <th>Price</th>
                                <th>Status</th>
                                <th>Create Time</th>
                                <th>Expected Time</th>
                                <th>Artist</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ImageRequests)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                                    <td><span class="badge badge-pill @GetStatusClass(item.RequestStatus)">@Html.DisplayFor(modelItem => item.RequestStatus)</span></td>
                                    <td>@Html.DisplayFor(modelItem => item.CreateTime)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ExpectedTime)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Artist.FirstName) @Html.DisplayFor(modelItem => item.Artist.LastName)</td>
                                    <td>
                                        <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm">View Details</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </main>
</div>

@functions {
    public string GetStatusClass(RequestStatus status)
    {
        string baseClass = "status-badge "; // Thêm một dấu cách để ngăn cách các class
        switch (status)
        {
            case RequestStatus.PROCESSING:
                return baseClass + "status-processing";
            case RequestStatus.USER_ACCEPTED:
                return baseClass + "status-user-accepted";
            case RequestStatus.ARTIST_ACCEPTED:
                return baseClass + "status-artist-accepted";
            case RequestStatus.ACCEPTED:
                return baseClass + "status-accepted";
            case RequestStatus.REJECTED:
                return baseClass + "status-rejected";
            case RequestStatus.CANCELLED:
                return baseClass + "status-cancelled";
            case RequestStatus.UPLOADED:
                return baseClass + "status-uploaded";
            case RequestStatus.SUCCESS:
                return baseClass + "status-success";
            default:
                return baseClass + "text-muted";
        }
    }
}